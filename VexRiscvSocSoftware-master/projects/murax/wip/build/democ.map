
Allocating common symbols
Common symbol       size              file

b                   0x4               build/src/main.o
c                   0x4               build/src/main.o
a                   0x4               build/src/main.o

Discarded input sections

 .group         0x0000000000000000        0x8 build/src/crt.o
 .group         0x0000000000000000        0x8 build/src/main.o
 .group         0x0000000000000000        0x8 build/src/main.o
 .group         0x0000000000000000        0x8 build/src/main.o
 .group         0x0000000000000000        0x8 build/src/main.o
 .group         0x0000000000000000        0x8 build/src/main.o
 .group         0x0000000000000000        0x8 build/src/main.o
 .group         0x0000000000000000        0x8 build/src/main.o
 .group         0x0000000000000000        0x8 build/src/main.o
 .debug_macro   0x0000000000000000      0x736 build/src/main.o

Memory Configuration

Name             Origin             Length             Attributes
onChipRam        0x0000000080000000 0x0000000000002000
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD build/src/crt.o
LOAD build/src/main.o
LOAD /opt/riscv/bin/../lib/gcc/riscv64-unknown-elf/7.2.0/rv32i/ilp32/libgcc.a
                0x0000000000000200                _stack_size = DEFINED (_stack_size)?_stack_size:0x200
                0x0000000000000000                _heap_size = DEFINED (_heap_size)?_heap_size:0x0

.vector         0x0000000080000000      0x118
 *crt.o(.text)
 .text          0x0000000080000000      0x118 build/src/crt.o
                0x0000000080000000                crtStart

.memory         0x0000000080000118      0x374
 *(.text)
 .text          0x0000000080000118      0x374 build/src/main.o
                0x00000000800002ac                defaultConstructor
                0x00000000800002d4                main
                0x0000000080000410                irqCallback
                0x000000008000048c                end = .

.rela.dyn       0x000000008000048c        0x0
 .rela.text     0x000000008000048c        0x0 build/src/crt.o

.rodata
 *(.rdata)
 *(.rodata .rodata.*)
 *(.gnu.linkonce.r.*)

.ctors          0x000000008000048c        0x4
                0x000000008000048c                . = ALIGN (0x4)
                0x000000008000048c                _ctors_start = .
 *(.init_array*)
 .init_array    0x000000008000048c        0x4 build/src/main.o
 *(SORT(.ctors.*))
 *(.ctors)
                0x0000000080000490                . = ALIGN (0x4)
                0x0000000080000490                _ctors_end = .

.data           0x0000000080000490        0x0
 *(.rdata)
 *(.rodata .rodata.*)
 *(.gnu.linkonce.r.*)
 *(.data .data.*)
 .data          0x0000000080000490        0x0 build/src/crt.o
 .data          0x0000000080000490        0x0 build/src/main.o
 *(.gnu.linkonce.d.*)
                0x0000000080000490                . = ALIGN (0x8)
 *fill*         0x0000000080000490        0x0 
                0x0000000080000c90                PROVIDE (__global_pointer$, (. + 0x800))
 *(.sdata .sdata.*)
 *(.gnu.linkonce.s.*)
                0x0000000080000490                . = ALIGN (0x8)
 *(.srodata.cst16)
 *(.srodata.cst8)
 *(.srodata.cst4)
 *(.srodata.cst2)
 *(.srodata .srodata.*)

vectors         0x0000000080000490        0x8
 vectors        0x0000000080000490        0x8 build/src/crt.o
                0x0000000080000490                initVectors

.bss            0x0000000080000498        0xc
                0x0000000080000498                . = ALIGN (0x4)
                0x0000000080000498                _bss_start = .
 *(.sbss*)
 *(.gnu.linkonce.sb.*)
 *(.bss .bss.*)
 .bss           0x0000000080000498        0x0 build/src/crt.o
 .bss           0x0000000080000498        0x0 build/src/main.o
 *(.gnu.linkonce.b.*)
 *(COMMON)
 COMMON         0x0000000080000498        0xc build/src/main.o
                0x0000000080000498                b
                0x000000008000049c                c
                0x00000000800004a0                a
                0x00000000800004a4                . = ALIGN (0x4)
                0x00000000800004a4                _bss_end = .

.noinit         0x00000000800004a4        0x0
                0x00000000800004a4                . = ALIGN (0x4)
 *(.noinit .noinit.*)
                0x00000000800004a4                . = ALIGN (0x4)

._user_heap     0x00000000800004a4        0x4
                0x00000000800004a8                . = ALIGN (0x8)
 *fill*         0x00000000800004a4        0x4 
                [!provide]                        PROVIDE (end, .)
                [!provide]                        PROVIDE (_end, .)
                [!provide]                        PROVIDE (_heap_start, .)
                0x00000000800004a8                . = (. + _heap_size)
                0x00000000800004a8                . = ALIGN (0x8)
                [!provide]                        PROVIDE (_heap_end, .)

._stack         0x00000000800004a8      0x208
                0x00000000800004b0                . = ALIGN (0x10)
 *fill*         0x00000000800004a8        0x8 
                [!provide]                        PROVIDE (_stack_end, .)
                0x00000000800006b0                . = (. + _stack_size)
 *fill*         0x00000000800004b0      0x200 
                0x00000000800006b0                . = ALIGN (0x10)
                0x00000000800006b0                PROVIDE (_stack_start, .)
OUTPUT(build/democ.elf elf32-littleriscv)

.debug_info     0x0000000000000000      0x515
 .debug_info    0x0000000000000000      0x13b build/src/crt.o
 .debug_info    0x000000000000013b      0x3da build/src/main.o

.debug_abbrev   0x0000000000000000      0x229
 .debug_abbrev  0x0000000000000000       0xd0 build/src/crt.o
 .debug_abbrev  0x00000000000000d0      0x159 build/src/main.o

.debug_aranges  0x0000000000000000       0x40
 .debug_aranges
                0x0000000000000000       0x20 build/src/crt.o
 .debug_aranges
                0x0000000000000020       0x20 build/src/main.o

.debug_macro    0x0000000000000000      0xc51
 .debug_macro   0x0000000000000000       0x11 build/src/crt.o
 .debug_macro   0x0000000000000011      0x736 build/src/crt.o
 .debug_macro   0x0000000000000747       0xa4 build/src/main.o
 .debug_macro   0x00000000000007eb       0x22 build/src/main.o
 .debug_macro   0x000000000000080d       0x87 build/src/main.o
 .debug_macro   0x0000000000000894       0x51 build/src/main.o
 .debug_macro   0x00000000000008e5       0xef build/src/main.o
 .debug_macro   0x00000000000009d4       0x6a build/src/main.o
 .debug_macro   0x0000000000000a3e      0x1df build/src/main.o
 .debug_macro   0x0000000000000c1d       0x34 build/src/main.o

.debug_line     0x0000000000000000      0x3f0
 .debug_line    0x0000000000000000       0xca build/src/crt.o
 .debug_line    0x00000000000000ca      0x326 build/src/main.o

.debug_str      0x0000000000000000     0x3569
 .debug_str     0x0000000000000000     0x24cf build/src/crt.o
                                       0x24e1 (size before relaxing)
 .debug_str     0x00000000000024cf     0x109a build/src/main.o
                                       0x3617 (size before relaxing)

.comment        0x0000000000000000       0x11
 .comment       0x0000000000000000       0x11 build/src/crt.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 build/src/main.o

.debug_frame    0x0000000000000000      0x1ec
 .debug_frame   0x0000000000000000       0x9c build/src/crt.o
 .debug_frame   0x000000000000009c      0x150 build/src/main.o
